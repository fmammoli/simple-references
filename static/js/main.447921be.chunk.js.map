{"version":3,"sources":["Hooks.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","initialUrl","initialData","initialOptions","React","useState","data","setData","isLoading","setIsLoading","isError","setIsError","url","options","request","setRequest","useEffect","a","console","log","mode","fetch","result","json","resultData","fetchData","AbntItem","reference","months","authors","flatMap","item","family","toUpperCase","given","join","title","journal","volume","issue","pages","month","year","availableAt","doi","filter","val","formatReference","SearchItem","setDOI","setSearchList","subtitle","URL","type","publisher","author","issued","onClick","event","DOI","DoiForm","query","setQuery","onSubmit","preventDefault","handleSubmit","value","onChange","target","FreeSearchForm","setSearchQuery","App","references","dataList","setDataList","initialDOI","headers","Headers","doiData","setDoiData","subTitle","page","link","queryUrl","includes","useDOI","doiIsLoading","doiIsError","searchList","initialSearchQuery","newSearchQuery","formattedQuery","split","useFreeSearch","searchData","searchIsLoading","searchIsError","message","items","oldList","className","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.447921be.chunk.js","sourcesContent":["import React from 'react';\n\n//Transform the response from DOI content negotiation into an simpler object\nfunction transformJournalArticle(data) {\n    const months = ['jan', 'fev', 'mar', 'abr', 'maio', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez'];\n\n    const reference = {\n        authors: data.author,\n        title: data.title,\n        subTitle: data.subtitle,\n        journal: data['container-title'],\n        volume: data.volume,\n        issue: data.issue,\n        pages: data.page,\n        month: data.issued['date-parts'][0][1],\n        year: data.issued['date-parts'][0][0],\n        availableAt: data.link[0].URL,\n        doi: data.URL,\n        type: data.type\n    };\n}\n\nfunction useFetch(initialUrl, initialData, initialOptions = '') {\n    const [data, setData] = React.useState(initialData);\n    //const [url, setUrl] = React.useState(initialUrl);\n    //const [options, setOptions] = React.useState(initialOptions);\n\n    const [isLoading, setIsLoading] = React.useState(false);\n    const [isError, setIsError] = React.useState(false);\n\n    const [request, setRequest] = React.useState({url: initialUrl, options: {...initialOptions}});\n\n    React.useEffect(() => {\n        console.log('to fetch')\n        if(!request.url) return;\n\n        async function fetchData (url, options = '') {\n            if(!url) return;\n            console.log('fetching');\n            \n            setIsError(false);\n            setIsLoading(true);\n    \n            try {\n                console.log(`with options ${options.mode}`)\n                const result = options ? await fetch(url, {...options}) : await fetch(url);\n                const resultData = await result.json();                \n                console.log(resultData);\n                \n                setData(resultData);\n            } catch (error) {\n                setIsError(true);\n            }\n            setIsLoading(false);\n        }\n\n        fetchData(request.url, request.options);\n    },[request]);\n\n    return [{data, isLoading, isError}, setRequest]\n}\n\nfunction useDOI(initialDOI) {\n    const contentNegotiationHeader = new Headers({'Accept': 'application/vnd.citationstyles.csl+json, application/rdf+xml, text/x-bibliography; style=associacao-brasileira-de-norams-tecnicas'});\n    const options = {headers: contentNegotiationHeader, mode:'cors'};\n    const [{data: fetchData, isLoading, isError}, setRequest] = useFetch(initialDOI, '', options);\n\n    const [doiData, setDoiData] = React.useState('');\n\n    function setDOI(doi) {\n        const queryUrl = doi.includes('https://doi.org/') ? doi : 'https://doi.org/'+doi;\n        setRequest({url: queryUrl, options: {...options}})\n    }\n\n    React.useEffect(() => {\n        if(!fetchData) return;\n        const reference = {\n            authors: fetchData.author,\n            title: fetchData.title,\n            subTitle: fetchData.subtitle,\n            journal: fetchData['container-title'] ? fetchData['container-title'] : '',\n            volume: fetchData.volume,\n            issue: fetchData.issue,\n            pages: fetchData.page,\n            month: fetchData.issued?.['date-parts']?.[0][1],\n            year: fetchData.issued?.['date-parts']?.[0][0],\n            availableAt: fetchData.link?.[0]?.URL,\n            doi: fetchData.URL,\n            type: fetchData.type\n        };\n        setDoiData(reference);   \n    },[fetchData]);\n\n    return [{data: doiData, isLoading, isError}, setDOI]\n}\n\nfunction useFreeSearch(initialSearchQuery) {\n    const [{data, isLoading, isError}, setRequest] = useFetch(initialSearchQuery,'');\n\n    function setSearchQuery(newSearchQuery) {\n        const formattedQuery = newSearchQuery.split(' ').join('+');\n        console.log(`Searching for for ${formattedQuery}`);\n        setRequest({url: `https://api.crossref.org/works?query.bibliographic=${formattedQuery}&mailto=fmammoli@gmail.com`});\n    }\n\n    return [{data, isLoading, isError}, setSearchQuery]\n}\n\nexport {useFetch, useDOI, useFreeSearch}","import React from 'react';\nimport {useDOI, useFreeSearch} from './Hooks';\nimport './App.css';\n\n//Formato Documento Eletrônico(ABNT)\n\n//Sobrenome, Nome. Titulo. Nome do Journal, cidade, volume, numero, paginas, mes, ano.\n//MONTEIRO, Marko. Construindo imagens e territórios: pensando a visualidade e a materialidade do sensoriamento remoto. Hist. cienc. saude-Manguinhos,  Rio de Janeiro ,  v. 22, n. 2, p. 577-591,  jun.  2015 .   Disponível em <http://www.scielo.br/scielo.php?script=sci_arttext&pid=S0104-59702015000200016&lng=pt&nrm=iso>. acessos em  29  nov.  2020.  https://doi.org/10.1590/S0104-59702015000200006.\n\nfunction AbntItem({reference}) {\n\n    const months = ['jan', 'fev', 'mar', 'abr', 'maio', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez'];\n\n    //Format reference by ommiting lacking information, might not be the best solution.\n    function formatReference(reference) {\n        const authorsString = `${reference.authors.flatMap(item => `${item.family.toUpperCase()}, ${item.given}`).join('; ')}.`;\n        const titleString = reference.title ? `${reference.title}.` : '';\n        const journalString = reference.journal ? `${reference.journal},` : '';\n        const volumeString = reference.volume ? `v. ${reference.volume},` : '';\n        const issueString = reference.issue ? `n. ${reference.issue},` : '';\n        const pagesString = reference.pages ? `p. ${reference.pages},` : '';\n        const monthString = reference.month ? `${months[reference.month-1]}.` : '';\n        const yearString = reference.year ? `${reference.year}.` : '';\n        const availableAtSring = reference.availableAt ? `Disponível em: <${reference.availableAt}>` : '';\n        const doiString = reference.doi ? `DOI: ${reference.doi}` : '';\n        return [authorsString, titleString, journalString, volumeString, issueString, pagesString, monthString, yearString, availableAtSring, doiString].filter(val => val).join(' ');\n    }\n    \n\n    return (\n        <p>{formatReference(reference)}</p>\n    )\n}\n\nfunction SearchItem({item, setDOI, setSearchList}) {\n    function handleOnClick(event) {\n        setDOI(item.DOI);\n        setSearchList([]);\n    }\n    //onst authorsString = `${item.author.flatMap(element => `${element.family.toUpperCase()}, ${element.given}`).join('; ')}.`;\n\n    return (\n        <li>\n            <p>Title: {item.title[0]}</p>\n            <p>Subtitle: {item.subtitle?.[0]}</p>\n            <p>URL: {item.URL}</p>\n            <p>Type: {item.type}</p>\n            <p>Publisher: {item.publisher}</p>\n            <p>Author: {item.author?.[0].given} {item.author?.[0].family}</p>\n            <p>Year: {item.issued?.['date-parts']?.[0].[0]}</p>\n            <button onClick={event => handleOnClick(event)}>Add</button>\n        </li>\n    )\n}\n\nfunction DoiForm({setDOI}) {\n    const [query, setQuery] = React.useState(\"\");\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setDOI(query);\n        setQuery('');\n    }\n\n    return (\n        <form onSubmit={event => {handleSubmit(event)}}>\n            DOI input: \n            <input\n                type=\"text\"\n                value={query}\n                onChange={event => setQuery(event.target.value)}\n            />\n            <button type=\"submit\">Search</button>\n        </form>\n    );\n}\n\nfunction FreeSearchForm({setSearchQuery}) {\n    const [query, setQuery] = React.useState('');\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setSearchQuery(query);\n        setQuery('');\n    }\n\n    return (\n        <form onSubmit={event => {handleSubmit(event)}}>\n            Free Text Search:\n            <input type=\"text\" value={query} onChange={event => setQuery(event.target.value)}></input>\n            <button type=\"Submit\">Search</button>\n        </form>\n    )\n}\n\nfunction App() {\n    const [dataList, setDataList] = React.useState({references: []});\n    const [{data: doiData, isLoading: doiIsLoading, isError: doiIsError}, setDOI] = useDOI('');\n\n    //const [{data, isLoading, isError}, setUrl] = useFetch('', '');\n\n    const [searchList, setSearchList] = React.useState([]);\n    const [{data: searchData, isLoading: searchIsLoading, isError: searchIsError}, setSearchQuery] = useFreeSearch('');\n    \n    React.useEffect(() => {\n        if(!searchData) return;\n\n        setSearchList(searchData.message.items);\n    },[searchData]);\n    \n    React.useEffect(() => {\n        if(!doiData) return;\n\n        setDataList(oldList => {\n            console.log(`Addins ${doiData.title} to dataList`);\n            return {references: [doiData, ...oldList.references]}\n        });\n        \n    },[doiData]);\n\n    return (\n        <main className=\"App\">\n            <h1>Simple Reference</h1>\n            <section>\n                <p>\n                    Input a DOI and get a ABNT formatted reference.\n                </p>\n                <p>\n                * It only works for journal articles yet*\n                </p>\n                <p>\n                    This uses simple content negotiation to retrieve metadata from DOIs.\n                </p>\n                <p>\n                    You can search by text in the Free Text Search. Text searches uses the CrossRef API, so it works better for journal articles than books.\n                </p>\n                <div>\n                    <p>Here are some DOIs you can test:</p>\n                    <div>https://doi.org/10.1590/S0104-59702015000200006</div>\n                    <div>https://doi.org/10.1177/0306312717730428</div>\n                    <div>https://doi.org/10.1177/0306312718783087</div>\n                </div>\n                <p></p>\n                <article>\n                    DOI Search\n                    <DoiForm setDOI={setDOI}></DoiForm>\n                </article>\n                <p></p>\n                <article>\n                    Free Form Search\n                    <FreeSearchForm setSearchQuery={setSearchQuery}></FreeSearchForm>\n                </article>\n            </section>\n            <section>\n                <h2>Search Results</h2>\n                <button onClick={event => setSearchList([])}>Clear Search</button>\n                {searchIsLoading && <div>Loading search...</div>}\n                {searchIsError && <div>Opps, search: not found...</div>}\n\n                <ul className=\"left\">\n                    {\n                        searchList.map( (item, index) => (\n                            <SearchItem item={item} key={index} index={index} setDOI={setDOI} setSearchList={setSearchList}></SearchItem>\n                        ))\n                    }\n                </ul>\n\n            </section>\n            <section>\n                <h2>Reference List</h2>\n                \n                {doiIsError && <div>Opps, DOI: not found...</div>}\n                {doiIsLoading && <div>Loading...</div>}\n            \n                <ul className=\"left\">\n                    {\n                        dataList.references.map( (item, index) => (\n                            <AbntItem reference={item} key={index} index={index}></AbntItem>\n                        ))\n                    }\n                </ul>\n                \n            </section>\n        </main>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}